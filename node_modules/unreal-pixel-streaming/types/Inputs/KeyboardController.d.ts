import { DataChannelController } from "../DataChannel/DataChannelController";
import { UeInputKeyboardMessage } from "../UeInstanceMessage/UeInputKeyboardMessage";
/**
 * Handles the Keyboard Inputs for the document
 */
export declare class KeyboardController {
    ueInputKeyBoardMessage: UeInputKeyboardMessage;
    suppressBrowserKeys: boolean;
    logging: boolean;
    /**
     *
     * @param dataChannelController - Data Channel Controller
     * @param suppressBrowserKeys - Suppress Browser Keys
     */
    constructor(dataChannelController: DataChannelController, suppressBrowserKeys: boolean);
    /**
     * Registers document keyboard events with the controller
     */
    registerKeyBoardEvents(): void;
    /**
     * Disable escape for prevent event to signal server
     */
    allowKeycode(keyboard: KeyboardEvent): boolean;
    /**
     * Handles When a key is down
     * @param keyboardEvent - Keyboard event
     */
    handleOnKeyDown(keyboardEvent: KeyboardEvent): void;
    /**
     * handles when a key is up
     * @param keyboardEvent - Keyboard event
     */
    handleOnKeyUp(keyboardEvent: KeyboardEvent): void;
    /**
     * Handles when a key is press
     * @param keyboard - Keyboard Event
     */
    handleOnKeyPress(keyboardEvent: KeyboardEvent): void;
    /**
     * Gets the Keycode of the Key pressed
     * @param keyboardEvent - Key board Event
     * @returns the key code of the Key
     */
    getKeycode(keyboardEvent: KeyboardEvent): number;
    /**
     * Browser keys do not have a charCode so we only need to test keyCode.
     */
    isKeyCodeBrowserKey(keyCode: number): boolean;
}
