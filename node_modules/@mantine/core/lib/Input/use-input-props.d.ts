import { DefaultProps } from '@mantine/styles';
import { InputWrapperBaseProps } from './InputWrapper/InputWrapper';
import { InputSharedProps } from './Input';
interface BaseProps extends InputWrapperBaseProps, InputSharedProps, DefaultProps {
    __staticSelector?: string;
    id?: string;
}
export declare function useInputProps<T extends BaseProps>(component: string, defaultProps: Partial<T>, props: T): Omit<import("@mantine/styles").MantineStyleSystemProps & Omit<T, "className" | "style" | "sx" | "classNames" | "styles" | "unstyled" | "label" | "id" | "required" | "size" | "__staticSelector" | "error" | "description" | "withAsterisk" | "labelProps" | "descriptionProps" | "errorProps" | "inputContainer" | "inputWrapperOrder" | "wrapperProps">, "m" | "my" | "mx" | "mt" | "mb" | "ml" | "mr" | "p" | "py" | "px" | "pt" | "pb" | "pl" | "pr"> & {
    classNames: Partial<Record<never, string>>;
    styles: import("@mantine/styles").Styles<never, never>;
    unstyled: boolean;
    wrapperProps: {
        m: (string & {}) | import("@mantine/styles").MantineNumberSize;
        mx: (string & {}) | import("@mantine/styles").MantineNumberSize;
        my: (string & {}) | import("@mantine/styles").MantineNumberSize;
        mt: (string & {}) | import("@mantine/styles").MantineNumberSize;
        mb: (string & {}) | import("@mantine/styles").MantineNumberSize;
        ml: (string & {}) | import("@mantine/styles").MantineNumberSize;
        mr: (string & {}) | import("@mantine/styles").MantineNumberSize;
        p: (string & {}) | import("@mantine/styles").MantineNumberSize;
        px: (string & {}) | import("@mantine/styles").MantineNumberSize;
        py: (string & {}) | import("@mantine/styles").MantineNumberSize;
        pt: (string & {}) | import("@mantine/styles").MantineNumberSize;
        pb: (string & {}) | import("@mantine/styles").MantineNumberSize;
        pl: (string & {}) | import("@mantine/styles").MantineNumberSize;
        pr: (string & {}) | import("@mantine/styles").MantineNumberSize;
        label: import("react").ReactNode;
        description: import("react").ReactNode;
        error: import("react").ReactNode;
        required: boolean;
        classNames: Partial<Record<never, string>>;
        className: string;
        __staticSelector: string;
        sx: import("@mantine/styles").Sx | import("@mantine/styles").Sx[];
        errorProps: Record<string, any>;
        labelProps: Record<string, any>;
        descriptionProps: Record<string, any>;
        unstyled: boolean;
        styles: import("@mantine/styles").Styles<never, never>;
        id: string;
        size: import("@mantine/styles").MantineSize;
        style: import("react").CSSProperties;
        inputContainer: (children: import("react").ReactNode) => import("react").ReactNode;
        inputWrapperOrder: ("input" | "label" | "error" | "description")[];
        withAsterisk: boolean;
    };
    inputProps: {
        required: boolean;
        classNames: Partial<Record<never, string>>;
        styles: import("@mantine/styles").Styles<never, never>;
        unstyled: boolean;
        id: string;
        size: import("@mantine/styles").MantineSize;
        __staticSelector: string;
        invalid: boolean;
    };
};
export {};
//# sourceMappingURL=use-input-props.d.ts.map