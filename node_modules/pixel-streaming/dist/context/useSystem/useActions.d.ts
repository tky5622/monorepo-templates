export declare const useActions: () => {
    state: any;
    dispatch: any;
    cls: {
        initMetaConfig(payload: any): void;
        setApiKey(apiKey: string): void;
        readonly apiKeyIsCorrect: boolean;
        loadData(apiKey?: string | null): Promise<boolean>;
        readonly commands_system: any[];
        readonly commands_project: any[];
        connectBuild(buildId: string): void;
        readonly streamingUrl: any;
        readonly sharedUrl: string | false;
        readonly sessionData: false | {
            uuid: any;
            streamingUrl: any;
            status: any;
            secondsToStart: any;
        };
        readonly apiData: false | {
            error: any;
            module: {
                current: string;
                release: string;
                status: number;
                update: boolean;
            };
        };
    };
    config: {
        readonly showToolbar: any;
        readonly showQuickMenu: any;
        readonly showDevBar: any;
        readonly helpers: {
            keyboard: any;
        };
        readonly showOverlay: any;
        readonly issuesUrl: any;
        readonly videoUrl: any;
    };
    project: {
        readonly exist: boolean;
        readonly name: any;
        readonly menu: any;
        readonly config: any;
    };
    notifications: {
        readonly showCommands: any;
        readonly showCallbacks: any;
        readonly placementsList: {
            label: string;
            value: string;
        }[];
        readonly placementValue: any;
        updatePlacement(placement: string): void;
        updateCommands(showCommands: boolean): void;
        updateCallbacks(showCallbacks: boolean): void;
    };
};
