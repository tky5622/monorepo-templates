"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isCtProjectUsingBuildProject = exports.getTempTailwindPath = void 0;
const path_1 = require("path");
/**
 * return a path to a temp css file
 * temp file is scoped to the project root
 * i.e. <context.root>/tmp/<project-root>/ct-styles.css
 */
function getTempTailwindPath(context) {
    var _a;
    if (!context.projectName) {
        throw new Error('No project name found in context');
    }
    const project = context === null || context === void 0 ? void 0 : context.projectGraph.nodes[context.projectName];
    if (!project) {
        throw new Error(`No project found in project graph for ${context.projectName}`);
    }
    if ((_a = project === null || project === void 0 ? void 0 : project.data) === null || _a === void 0 ? void 0 : _a.root) {
        return (0, path_1.join)(context.root, 'tmp', project.data.root, 'ct-styles.css');
    }
}
exports.getTempTailwindPath = getTempTailwindPath;
/**
 * also returns true if the ct project and build project are the same.
 * i.e. component testing inside an app.
 */
function isCtProjectUsingBuildProject(graph, parentProjectName, childProjectName) {
    return (parentProjectName === childProjectName ||
        graph.dependencies[parentProjectName].some((p) => p.target === childProjectName));
}
exports.isCtProjectUsingBuildProject = isCtProjectUsingBuildProject;
//# sourceMappingURL=ct-helpers.js.map