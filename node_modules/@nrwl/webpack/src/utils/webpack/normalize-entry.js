"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.normalizeExtraEntryPoints = void 0;
const tslib_1 = require("tslib");
const path_1 = require("path");
const devkit_1 = require("@nrwl/devkit");
function normalizeExtraEntryPoints(extraEntryPoints, defaultBundleName) {
    return extraEntryPoints.map((entry) => {
        let normalizedEntry;
        if (typeof entry === 'string') {
            normalizedEntry = {
                input: entry,
                inject: true,
                bundleName: defaultBundleName,
            };
        }
        else {
            const { lazy, inject = true } = entry, newEntry = tslib_1.__rest(entry, ["lazy", "inject"]);
            const injectNormalized = entry.lazy !== undefined ? !entry.lazy : inject;
            let bundleName;
            if (entry.bundleName) {
                bundleName = entry.bundleName;
            }
            else if (!injectNormalized) {
                // Lazy entry points use the file name as bundle name.
                bundleName = (0, path_1.basename)((0, devkit_1.normalizePath)(entry.input.replace(/\.(js|css|scss|sass|less|styl)$/i, '')));
            }
            else {
                bundleName = defaultBundleName;
            }
            normalizedEntry = Object.assign(Object.assign({}, newEntry), { inject: injectNormalized, bundleName });
        }
        return normalizedEntry;
    });
}
exports.normalizeExtraEntryPoints = normalizeExtraEntryPoints;
//# sourceMappingURL=normalize-entry.js.map