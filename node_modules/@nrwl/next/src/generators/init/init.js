"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.nextInitSchematic = exports.nextInitGenerator = void 0;
const tslib_1 = require("tslib");
const devkit_1 = require("@nrwl/devkit");
const run_tasks_in_serial_1 = require("@nrwl/workspace/src/utilities/run-tasks-in-serial");
const jest_1 = require("@nrwl/jest");
const cypress_1 = require("@nrwl/cypress");
const react_1 = require("@nrwl/react");
const versions_1 = require("../../utils/versions");
const add_gitignore_entry_1 = require("../../utils/add-gitignore-entry");
function updateDependencies(host) {
    return (0, devkit_1.addDependenciesToPackageJson)(host, {
        '@nrwl/next': versions_1.nxVersion,
        next: versions_1.nextVersion,
        react: react_1.reactVersion,
        'react-dom': react_1.reactDomVersion,
        tslib: versions_1.tsLibVersion,
    }, {
        'eslint-config-next': versions_1.eslintConfigNextVersion,
    });
}
function nextInitGenerator(host, schema) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const tasks = [];
        if (!schema.unitTestRunner || schema.unitTestRunner === 'jest') {
            const jestTask = (0, jest_1.jestInitGenerator)(host, schema);
            tasks.push(jestTask);
        }
        if (!schema.e2eTestRunner || schema.e2eTestRunner === 'cypress') {
            const cypressTask = (0, cypress_1.cypressInitGenerator)(host, {});
            tasks.push(cypressTask);
        }
        const reactTask = yield (0, react_1.reactInitGenerator)(host, schema);
        tasks.push(reactTask);
        const installTask = updateDependencies(host);
        tasks.push(installTask);
        (0, add_gitignore_entry_1.addGitIgnoreEntry)(host);
        return (0, run_tasks_in_serial_1.runTasksInSerial)(...tasks);
    });
}
exports.nextInitGenerator = nextInitGenerator;
exports.default = nextInitGenerator;
exports.nextInitSchematic = (0, devkit_1.convertNxGenerator)(nextInitGenerator);
//# sourceMappingURL=init.js.map