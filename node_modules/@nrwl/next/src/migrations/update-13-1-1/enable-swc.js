"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.update = void 0;
const tslib_1 = require("tslib");
const devkit_1 = require("@nrwl/devkit");
function update(host) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const projects = (0, devkit_1.getProjects)(host);
        projects.forEach((project) => {
            const nextConfigPath = (0, devkit_1.joinPathFragments)(project.root, 'next.config.js');
            const jestConfigPath = (0, devkit_1.joinPathFragments)(project.root, 'jest.config.js');
            const babelConfigPath = (0, devkit_1.joinPathFragments)(project.root, '.babelrc');
            const storybookMainPath = (0, devkit_1.joinPathFragments)(project.root, '.storybook/main.js');
            if (!host.exists(nextConfigPath) || !host.exists(jestConfigPath))
                return;
            if (host.exists(babelConfigPath)) {
                if (customBabelConfig(host, babelConfigPath)) {
                    devkit_1.logger.info(`NX Custom .babelrc file detected, skipping deletion. You can delete this file yourself to enable SWC: ${babelConfigPath}`);
                }
                else if (host.exists(storybookMainPath)) {
                    devkit_1.logger.info(`NX Storybook configuration for project "${project.name}" detected, skipping deletion of .babelrc`);
                }
                else {
                    // Deleting custom babel config enables SWC
                    host.delete(babelConfigPath);
                }
            }
            const content = host.read(jestConfigPath).toString();
            if (content.match(/:\s+'babel-jest'/)) {
                const updated = content.replace(/:\s+'babel-jest'/, `: ['babel-jest', { presets: ['@nrwl/next/babel'] }]`);
                host.write(jestConfigPath, updated);
            }
        });
        yield (0, devkit_1.formatFiles)(host);
    });
}
exports.update = update;
function customBabelConfig(host, configPath) {
    var _a, _b, _c;
    const json = (0, devkit_1.readJson)(host, configPath);
    return !(((_a = json.presets) === null || _a === void 0 ? void 0 : _a.length) === 1 &&
        ((_b = json.presets) === null || _b === void 0 ? void 0 : _b[0]) === '@nrwl/next/babel' &&
        (((_c = json.plugins) === null || _c === void 0 ? void 0 : _c.length) === 0 || !json.plugins));
}
exports.default = update;
//# sourceMappingURL=enable-swc.js.map