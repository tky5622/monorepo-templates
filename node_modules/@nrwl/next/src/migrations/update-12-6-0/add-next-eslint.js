"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.addNextEslint = void 0;
const tslib_1 = require("tslib");
const devkit_1 = require("@nrwl/devkit");
function addNextEslint(host) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const projects = (0, devkit_1.getProjects)(host);
        projects.forEach((project) => {
            var _a, _b;
            if (((_b = (_a = project.targets) === null || _a === void 0 ? void 0 : _a.build) === null || _b === void 0 ? void 0 : _b.executor) !== '@nrwl/next:build')
                return;
            const eslintPath = `${project.root}/.eslintrc.json`;
            if (!host.exists(eslintPath))
                return;
            (0, devkit_1.updateJson)(host, eslintPath, (eslintConfig) => {
                if (!eslintConfig.extends) {
                    eslintConfig.extends = [];
                }
                if (typeof eslintConfig.extends === 'string') {
                    eslintConfig.extends = [eslintConfig.extends];
                }
                // add next.js configuration
                eslintConfig.extends.push(...['next', 'next/core-web-vitals']);
                // remove nx/react plugin, as it conflicts with the next.js one
                eslintConfig.extends = eslintConfig.extends.filter((name) => name !== 'plugin:@nrwl/nx/react');
                eslintConfig.extends.unshift('plugin:@nrwl/nx/react-typescript');
                if (!eslintConfig.env) {
                    eslintConfig.env = {};
                }
                eslintConfig.env.jest = true;
                return eslintConfig;
            });
        });
        yield (0, devkit_1.formatFiles)(host);
    });
}
exports.addNextEslint = addNextEslint;
exports.default = addNextEslint;
//# sourceMappingURL=add-next-eslint.js.map