"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.updateKarmaConf = exports.deleteFile = exports.formatFiles = exports.addInstallTask = exports.generateProjectLint = exports.addLintFiles = exports.addUpdateTask = exports.updateBuilderConfig = exports.updateWorkspace = exports.getWorkspace = exports.serializeTarget = exports.parseTarget = exports.editTarget = exports.replaceAppNameWithPath = exports.getWorkspacePath = exports.getNpmScope = exports.RemoveChange = exports.ReplaceChange = exports.InsertChange = exports.readNxJsonInTree = exports.updateNxJsonInTree = exports.renameDirSyncInTree = exports.renameSyncInTree = exports.readWorkspace = exports.updatePackageJsonDependencies = exports.findNodes = exports.createOrUpdate = exports.addParameterToConstructor = exports.getProjectConfig = exports.addGlobal = exports.addIncludeToTsConfig = exports.addMethod = exports.addDepsToPackageJson = exports.replaceNodeValue = exports.insert = exports.updateWorkspaceInTree = exports.updateJsonInTree = exports.readJsonInTree = exports.readPackageJson = exports.readWorkspaceConfig = exports.output = exports.resolveUserExistingPrettierConfig = exports.names = exports.createDirectory = exports.copyFile = exports.updateJsonFile = exports.renameSync = exports.projectRootDir = exports.ProjectType = exports.readTsConfig = void 0;
exports.stringUtils = exports.convertToNxProjectSchematic = exports.convertToNxProjectGenerator = exports.runCommandsGenerator = exports.removeGenerator = exports.moveGenerator = exports.libraryGenerator = exports.updatePackagesInPackageJson = exports.checkAndCleanWithSemver = exports.renameNpmPackages = exports.renamePackageImports = exports.visitNotIgnoredFiles = void 0;
const tslib_1 = require("tslib");
var typescript_1 = require("./src/utilities/typescript");
Object.defineProperty(exports, "readTsConfig", { enumerable: true, get: function () { return typescript_1.readTsConfig; } });
var project_type_1 = require("./src/utils/project-type");
Object.defineProperty(exports, "ProjectType", { enumerable: true, get: function () { return project_type_1.ProjectType; } });
Object.defineProperty(exports, "projectRootDir", { enumerable: true, get: function () { return project_type_1.projectRootDir; } });
var fileutils_1 = require("./src/utilities/fileutils");
Object.defineProperty(exports, "renameSync", { enumerable: true, get: function () { return fileutils_1.renameSync; } });
Object.defineProperty(exports, "updateJsonFile", { enumerable: true, get: function () { return fileutils_1.updateJsonFile; } });
Object.defineProperty(exports, "copyFile", { enumerable: true, get: function () { return fileutils_1.copyFile; } });
Object.defineProperty(exports, "createDirectory", { enumerable: true, get: function () { return fileutils_1.createDirectory; } });
var devkit_1 = require("@nrwl/devkit");
Object.defineProperty(exports, "names", { enumerable: true, get: function () { return devkit_1.names; } });
var prettier_1 = require("./src/utilities/prettier");
Object.defineProperty(exports, "resolveUserExistingPrettierConfig", { enumerable: true, get: function () { return prettier_1.resolveUserExistingPrettierConfig; } });
var output_1 = require("./src/utilities/output");
Object.defineProperty(exports, "output", { enumerable: true, get: function () { return output_1.output; } });
var file_utils_1 = require("nx/src/project-graph/file-utils");
Object.defineProperty(exports, "readWorkspaceConfig", { enumerable: true, get: function () { return file_utils_1.readWorkspaceConfig; } });
Object.defineProperty(exports, "readPackageJson", { enumerable: true, get: function () { return file_utils_1.readPackageJson; } });
var ast_utils_1 = require("./src/utils/ast-utils");
Object.defineProperty(exports, "readJsonInTree", { enumerable: true, get: function () { return ast_utils_1.readJsonInTree; } });
Object.defineProperty(exports, "updateJsonInTree", { enumerable: true, get: function () { return ast_utils_1.updateJsonInTree; } });
Object.defineProperty(exports, "updateWorkspaceInTree", { enumerable: true, get: function () { return ast_utils_1.updateWorkspaceInTree; } });
Object.defineProperty(exports, "insert", { enumerable: true, get: function () { return ast_utils_1.insert; } });
Object.defineProperty(exports, "replaceNodeValue", { enumerable: true, get: function () { return ast_utils_1.replaceNodeValue; } });
Object.defineProperty(exports, "addDepsToPackageJson", { enumerable: true, get: function () { return ast_utils_1.addDepsToPackageJson; } });
Object.defineProperty(exports, "addMethod", { enumerable: true, get: function () { return ast_utils_1.addMethod; } });
Object.defineProperty(exports, "addIncludeToTsConfig", { enumerable: true, get: function () { return ast_utils_1.addIncludeToTsConfig; } });
Object.defineProperty(exports, "addGlobal", { enumerable: true, get: function () { return ast_utils_1.addGlobal; } });
Object.defineProperty(exports, "getProjectConfig", { enumerable: true, get: function () { return ast_utils_1.getProjectConfig; } });
Object.defineProperty(exports, "addParameterToConstructor", { enumerable: true, get: function () { return ast_utils_1.addParameterToConstructor; } });
Object.defineProperty(exports, "createOrUpdate", { enumerable: true, get: function () { return ast_utils_1.createOrUpdate; } });
Object.defineProperty(exports, "findNodes", { enumerable: true, get: function () { return ast_utils_1.findNodes; } });
Object.defineProperty(exports, "updatePackageJsonDependencies", { enumerable: true, get: function () { return ast_utils_1.updatePackageJsonDependencies; } });
Object.defineProperty(exports, "readWorkspace", { enumerable: true, get: function () { return ast_utils_1.readWorkspace; } });
Object.defineProperty(exports, "renameSyncInTree", { enumerable: true, get: function () { return ast_utils_1.renameSyncInTree; } });
Object.defineProperty(exports, "renameDirSyncInTree", { enumerable: true, get: function () { return ast_utils_1.renameDirSyncInTree; } });
Object.defineProperty(exports, "updateNxJsonInTree", { enumerable: true, get: function () { return ast_utils_1.updateNxJsonInTree; } });
Object.defineProperty(exports, "readNxJsonInTree", { enumerable: true, get: function () { return ast_utils_1.readNxJsonInTree; } });
Object.defineProperty(exports, "InsertChange", { enumerable: true, get: function () { return ast_utils_1.InsertChange; } });
Object.defineProperty(exports, "ReplaceChange", { enumerable: true, get: function () { return ast_utils_1.ReplaceChange; } });
Object.defineProperty(exports, "RemoveChange", { enumerable: true, get: function () { return ast_utils_1.RemoveChange; } });
var cli_config_utils_1 = require("./src/utils/cli-config-utils");
Object.defineProperty(exports, "getNpmScope", { enumerable: true, get: function () { return cli_config_utils_1.getNpmScope; } });
Object.defineProperty(exports, "getWorkspacePath", { enumerable: true, get: function () { return cli_config_utils_1.getWorkspacePath; } });
Object.defineProperty(exports, "replaceAppNameWithPath", { enumerable: true, get: function () { return cli_config_utils_1.replaceAppNameWithPath; } });
Object.defineProperty(exports, "editTarget", { enumerable: true, get: function () { return cli_config_utils_1.editTarget; } });
Object.defineProperty(exports, "parseTarget", { enumerable: true, get: function () { return cli_config_utils_1.parseTarget; } });
Object.defineProperty(exports, "serializeTarget", { enumerable: true, get: function () { return cli_config_utils_1.serializeTarget; } });
var workspace_1 = require("./src/utils/workspace");
Object.defineProperty(exports, "getWorkspace", { enumerable: true, get: function () { return workspace_1.getWorkspace; } });
Object.defineProperty(exports, "updateWorkspace", { enumerable: true, get: function () { return workspace_1.updateWorkspace; } });
Object.defineProperty(exports, "updateBuilderConfig", { enumerable: true, get: function () { return workspace_1.updateBuilderConfig; } });
var update_task_1 = require("./src/utils/update-task");
Object.defineProperty(exports, "addUpdateTask", { enumerable: true, get: function () { return update_task_1.addUpdateTask; } });
var lint_1 = require("./src/utils/lint");
Object.defineProperty(exports, "addLintFiles", { enumerable: true, get: function () { return lint_1.addLintFiles; } });
Object.defineProperty(exports, "generateProjectLint", { enumerable: true, get: function () { return lint_1.generateProjectLint; } });
var add_install_task_1 = require("./src/utils/rules/add-install-task");
Object.defineProperty(exports, "addInstallTask", { enumerable: true, get: function () { return add_install_task_1.addInstallTask; } });
var format_files_1 = require("./src/utils/rules/format-files");
Object.defineProperty(exports, "formatFiles", { enumerable: true, get: function () { return format_files_1.formatFiles; } });
var deleteFile_1 = require("./src/utils/rules/deleteFile");
Object.defineProperty(exports, "deleteFile", { enumerable: true, get: function () { return deleteFile_1.deleteFile; } });
tslib_1.__exportStar(require("./src/utils/rules/ng-add"), exports);
var update_karma_conf_1 = require("./src/utils/rules/update-karma-conf");
Object.defineProperty(exports, "updateKarmaConf", { enumerable: true, get: function () { return update_karma_conf_1.updateKarmaConf; } });
var visit_not_ignored_files_1 = require("./src/utils/rules/visit-not-ignored-files");
Object.defineProperty(exports, "visitNotIgnoredFiles", { enumerable: true, get: function () { return visit_not_ignored_files_1.visitNotIgnoredFiles; } });
var rename_package_imports_1 = require("./src/utils/rules/rename-package-imports");
Object.defineProperty(exports, "renamePackageImports", { enumerable: true, get: function () { return rename_package_imports_1.renamePackageImports; } });
var rename_npm_packages_1 = require("./src/utils/rules/rename-npm-packages");
Object.defineProperty(exports, "renameNpmPackages", { enumerable: true, get: function () { return rename_npm_packages_1.renameNpmPackages; } });
const strings = require("./src/utils/strings");
var version_utils_1 = require("./src/utils/version-utils");
Object.defineProperty(exports, "checkAndCleanWithSemver", { enumerable: true, get: function () { return version_utils_1.checkAndCleanWithSemver; } });
var update_packages_in_package_json_1 = require("./src/utils/update-packages-in-package-json");
Object.defineProperty(exports, "updatePackagesInPackageJson", { enumerable: true, get: function () { return update_packages_in_package_json_1.updatePackagesInPackageJson; } });
var library_1 = require("./src/generators/library/library");
Object.defineProperty(exports, "libraryGenerator", { enumerable: true, get: function () { return library_1.libraryGenerator; } });
var move_1 = require("./src/generators/move/move");
Object.defineProperty(exports, "moveGenerator", { enumerable: true, get: function () { return move_1.moveGenerator; } });
var remove_1 = require("./src/generators/remove/remove");
Object.defineProperty(exports, "removeGenerator", { enumerable: true, get: function () { return remove_1.removeGenerator; } });
var run_commands_1 = require("./src/generators/run-commands/run-commands");
Object.defineProperty(exports, "runCommandsGenerator", { enumerable: true, get: function () { return run_commands_1.runCommandsGenerator; } });
var convert_to_nx_project_1 = require("./src/generators/convert-to-nx-project/convert-to-nx-project");
Object.defineProperty(exports, "convertToNxProjectGenerator", { enumerable: true, get: function () { return convert_to_nx_project_1.convertToNxProjectGenerator; } });
Object.defineProperty(exports, "convertToNxProjectSchematic", { enumerable: true, get: function () { return convert_to_nx_project_1.convertToNxProjectSchematic; } });
exports.stringUtils = strings;
//# sourceMappingURL=index.js.map